name: ikvm-native-sdk

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  release:
    types:
    - created

jobs:
  build-windows:
    name: Build Windows SDK
    runs-on: ubuntu-latest
    timeout-minutes: 240
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Cache
      uses: actions/cache@v3
      with:
        path: dist/windows
        key: dist--windows--${{ runner.os }}--${{ hashFiles('windows/build.sh') }}-2
    - name: Check
      id: dist-windows-stamp
      uses: andstor/file-existence-action@v2
      with:
        files: dist/windows/stamp
    - name: Install
      if: steps.dist-windows-stamp.outputs.files_exists != 'true'
      run: |
        sudo apt-get update &&
        sudo apt-get install -y zip unzip curl wget
    - name: Build
      if: steps.dist-windows-stamp.outputs.files_exists != 'true'
      run: windows/build.sh && touch dist/windows/stamp
    - name: Package
      run: tar czvf /tmp/windows.tar.gz windows
      working-directory: dist
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: windows
        path: /tmp/windows.tar.gz
  build-linux:
    strategy:
      matrix:
        rid:
        - linux-x64
        - linux-musl-x64
        - linux-arm
        - linux-musl-arm
        - linux-arm64
        - linux-musl-arm64
    name: Build Linux SDK (${{ matrix.rid }})
    runs-on: ubuntu-latest
    timeout-minutes: 240
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Cache
      uses: actions/cache@v3
      with:
        path: dist/linux/${{ matrix.rid }}
        key: dist--linux--${{ matrix.rid }}--${{ runner.os }}--${{ hashFiles('linux/build.sh', 'linux/*/.config', 'linux/*/sdk.config') }}-1
    - name: Check
      id: dist-linux-stamp
      uses: andstor/file-existence-action@v2
      with:
        files: dist/linux/${{ matrix.rid }}/stamp
    - name: Install
      if: steps.dist-linux-stamp.outputs.files_exists != 'true'
      run: |
        sudo apt-get update &&
        sudo apt-get install -y \
          build-essential \
          gcc g++ \
          ninja-build zip unzip curl wget \
          help2man bison flex libtool libtool-bin patch libstdc++6 rsync git meson xz-utils texinfo symlinks
    - name: Build
      if: steps.dist-linux-stamp.outputs.files_exists != 'true'
      run: linux/build.sh ${{ matrix.rid }} && touch dist/linux/${{ matrix.rid }}/stamp
    - name: Package
      run: tar czvf /tmp/linux--${{ matrix.rid }}.tar.gz linux/${{ matrix.rid }}
      working-directory: dist
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: linux--${{ matrix.rid }}
        path: /tmp/linux--${{ matrix.rid }}.tar.gz
  build-macosx:
    name: Build Mac OS X SDK
    runs-on: ubuntu-latest
    timeout-minutes: 240
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Cache
      uses: actions/cache@v3
      with:
        path: dist/macosx
        key: dist--macosx--${{ runner.os }}--${{ hashFiles('macosx/build.sh') }}-1
    - name: Check
      id: dist-macosx-stamp
      uses: andstor/file-existence-action@v2
      with:
        files: dist/macosx/stamp
    - name: Install
      if: steps.dist-macosx-stamp.outputs.files_exists != 'true'
      run: |
        sudo apt-get update &&
        sudo apt-get install -y zip unzip curl
    - name: Build
      if: steps.dist-macosx-stamp.outputs.files_exists != 'true'
      run: macosx/build.sh && touch dist/macosx/stamp
    - name: Package
      run: tar czvhf /tmp/macosx.tar.gz macosx
      working-directory: dist
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: macosx
        path: /tmp/macosx.tar.gz
  release:
    name: Release
    if: github.event_name != 'pull_request'
    needs:
    - build-windows
    - build-linux
    - build-macosx
    runs-on: ubuntu-latest
    steps:
    - name: Download Windows SDK
      uses: actions/download-artifact@v3
      with:
        name: windows
        path: dist
    - name: Download Linux SDK (linux-x64)
      uses: actions/download-artifact@v3
      with:
        name: linux--linux-x64
        path: dist
    - name: Download Linux SDK (linux-musl-x64)
      uses: actions/download-artifact@v3
      with:
        name: linux--linux-musl-x64
        path: dist
    - name: Download Linux SDK (linux-arm64)
      uses: actions/download-artifact@v3
      with:
        name: linux--linux-arm64
        path: dist
    - name: Download Linux SDK (linux-musl-arm64)
      uses: actions/download-artifact@v3
      with:
        name: linux--linux-musl-arm64
        path: dist
    - name: Download Linux SDK (linux-arm)
      uses: actions/download-artifact@v3
      with:
        name: linux--linux-arm
        path: dist
    - name: Download Linux SDK (linux-musl-arm)
      uses: actions/download-artifact@v3
      with:
        name: linux--linux-musl-arm
        path: dist
    - name: Download Mac OS X SDK
      uses: actions/download-artifact@v3
      with:
        name: macosx
        path: dist
    - name: Create Release
      if: github.ref_type == 'tag'
      uses: ncipollo/release-action@v1.10.0
      with:
        tag: ${{ github.ref_name }}
        allowUpdates: true
        artifacts: dist/*.tar.gz
        draft: false
        makeLatest: true
        token: ${{ secrets.GITHUB_TOKEN }}
